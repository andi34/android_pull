From d4be1f5ffd53d448fb7129ef050ccb588f408125 Mon Sep 17 00:00:00 2001
From: Andreas Blaesius <skate4life@gmx.de>
Date: Sat, 25 Nov 2017 20:05:47 +0100
Subject: [PATCH 2/3] Revert "Add preference for enabling root access (3/3)"

This reverts commit 1014eef04fb247002db394d25b9232a785778edc.

Change-Id: I92e285256cc3d46c467e4971c6b8c2fbfb09ce40
---
 res/values/cm_arrays.xml                          | 15 ----
 res/values/cm_strings.xml                         |  9 ---
 res/xml/development_prefs.xml                     |  7 --
 src/com/android/settings/DevelopmentSettings.java | 90 -----------------------
 4 files changed, 121 deletions(-)

diff --git a/res/values/cm_arrays.xml b/res/values/cm_arrays.xml
index 4de6b14..5243da1 100644
--- a/res/values/cm_arrays.xml
+++ b/res/values/cm_arrays.xml
@@ -434,21 +434,6 @@
     <string-array name="gamma_descriptors" translatable="false">
     </string-array>
 
-    <!-- Arrays for root access capability -->
-    <string-array name="root_access_entries" translatable="false">
-        <item>@string/root_access_none</item>
-        <item>@string/root_access_apps</item>
-        <item>@string/root_access_adb</item>
-        <item>@string/root_access_all</item>
-    </string-array>
-
-    <string-array name="root_access_values" translatable="false">
-        <item>0</item>
-        <item>1</item>
-        <item>2</item>
-        <item>3</item>
-    </string-array>
-
     <!--- Sms security limit -->
     <string-array name="sms_security_check_limit_entries" translatable="false">
         <item>@string/sms_security_check_limit_none</item>
diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index 668f41a..2afa7c7 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -495,15 +495,6 @@ two in order to insert additional control points. \'Remove\' deletes the selecte
 
     <string name="app_security_title">App security</string>
 
-    <!-- Setting checkbox title for root access -->
-    <string name="root_access">Root access</string>
-    <string name="root_access_warning_title">Allow root access?</string>
-    <string name="root_access_warning_message">Allowing apps to request root access is very dangerous and could compromise the security of your system!</string>
-    <string name="root_access_none">Disabled</string>
-    <string name="root_access_apps">Apps only</string>
-    <string name="root_access_adb">ADB only</string>
-    <string name="root_access_all">Apps and ADB</string>
-
     <!-- Settings checkbox for updating Cyanogen recovery -->
     <string name="update_recovery_title">Update Cyanogen recovery</string>
     <string name="update_recovery_summary">Update recovery with system updates</string>
diff --git a/res/xml/development_prefs.xml b/res/xml/development_prefs.xml
index 45e8906..bf92e64 100644
--- a/res/xml/development_prefs.xml
+++ b/res/xml/development_prefs.xml
@@ -71,13 +71,6 @@
             android:fragment="com.android.settings.applications.ProcessStatsUi">
     </PreferenceScreen>
 
-    <ListPreference
-        android:key="root_access"
-        android:title="@string/root_access"
-        android:persistent="false"
-        android:entries="@array/root_access_entries"
-        android:entryValues="@array/root_access_values" />
-
     <CheckBoxPreference
         android:key="enable_quickboot"
         android:title="@string/enable_quickboot_title"
diff --git a/src/com/android/settings/DevelopmentSettings.java b/src/com/android/settings/DevelopmentSettings.java
index 9e4a95d..b64b110 100644
--- a/src/com/android/settings/DevelopmentSettings.java
+++ b/src/com/android/settings/DevelopmentSettings.java
@@ -150,9 +150,6 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
 
     private static final String OPENGL_TRACES_KEY = "enable_opengl_traces";
 
-    private static final String ROOT_ACCESS_KEY = "root_access";
-    private static final String ROOT_ACCESS_PROPERTY = "persist.sys.root_access";
-
     private static final String IMMEDIATELY_DESTROY_ACTIVITIES_KEY
             = "immediately_destroy_activities";
     private static final String APP_PROCESS_LIMIT_KEY = "app_process_limit";
@@ -231,8 +228,6 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
     private CheckBoxPreference mShowAllANRs;
     private CheckBoxPreference mKillAppLongpressBack;
 
-    private ListPreference mRootAccess;
-    private Object mSelectedRootValue;
     private PreferenceScreen mDevelopmentTools;
 
     private CheckBoxPreference mAdvancedReboot;
@@ -255,7 +250,6 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
     private Dialog mAdbKeysDialog;
 
     private boolean mUnavailable;
-    private Dialog mRootDialog;
     private Dialog mUpdateRecoveryDialog;
 
     public DevelopmentSettings() {
@@ -386,12 +380,6 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
             removePreferenceForProduction(hdcpChecking);
         }
 
-        mRootAccess = (ListPreference) findPreference(ROOT_ACCESS_KEY);
-        mRootAccess.setOnPreferenceChangeListener(this);
-        if (!removeRootOptionsIfRequired()) {
-            mAllPrefs.add(mRootAccess);
-        }
-
         mDevelopmentTools = (PreferenceScreen) findPreference(DEVELOPMENT_TOOLS);
         mAllPrefs.add(mDevelopmentTools);
 
@@ -437,18 +425,6 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
         return pref;
     }
 
-    private boolean removeRootOptionsIfRequired() {
-        // user builds don't get root, and eng always gets root
-        if (!(Build.IS_DEBUGGABLE || "eng".equals(Build.TYPE))) {
-            if (mRootAccess != null) {
-                getPreferenceScreen().removePreference(mRootAccess);
-                return true;
-            }
-        }
-
-        return false;
-    }
-
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
@@ -610,7 +586,6 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
         updateBugreportOptions();
         updateForceRtlOptions();
         updateWifiDisplayCertificationOptions();
-        updateRootAccessOptions();
         updateAdvancedRebootOptions();
         updateDevelopmentShortcutOptions();
         if (mUpdateRecovery != null) {
@@ -683,7 +658,6 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
             }
         }
         resetDebuggerOptions();
-        resetRootAccessOptions();
         resetAdbNotifyOptions();
         resetVerifyAppsOverUsbOptions();
         resetDevelopmentShortcutOptions();
@@ -748,40 +722,6 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
         }
     }
 
-    private void updateRootAccessOptions() {
-        String value = SystemProperties.get(ROOT_ACCESS_PROPERTY, "1");
-        mRootAccess.setValue(value);
-        mRootAccess.setSummary(getResources()
-                .getStringArray(R.array.root_access_entries)[Integer.valueOf(value)]);
-    }
-
-    private void writeRootAccessOptions(Object newValue) {
-        String oldValue = SystemProperties.get(ROOT_ACCESS_PROPERTY, "1");
-        SystemProperties.set(ROOT_ACCESS_PROPERTY, newValue.toString());
-        if (Integer.valueOf(newValue.toString()) < 2 && !oldValue.equals(newValue)
-                && "1".equals(SystemProperties.get("service.adb.root", "0"))) {
-            SystemProperties.set("service.adb.root", "0");
-            Settings.Secure.putInt(getActivity().getContentResolver(),
-                    Settings.Secure.ADB_ENABLED, 0);
-            Settings.Secure.putInt(getActivity().getContentResolver(),
-                    Settings.Secure.ADB_ENABLED, 1);
-        }
-        updateRootAccessOptions();
-    }
-
-    private void resetRootAccessOptions() {
-        String oldValue = SystemProperties.get(ROOT_ACCESS_PROPERTY, "1");
-        SystemProperties.set(ROOT_ACCESS_PROPERTY, "1");
-        if (!oldValue.equals("1") && "1".equals(SystemProperties.get("service.adb.root", "0"))) {
-            SystemProperties.set("service.adb.root", "0");
-            Settings.Secure.putInt(getActivity().getContentResolver(),
-                    Settings.Secure.ADB_ENABLED, 0);
-            Settings.Secure.putInt(getActivity().getContentResolver(),
-                    Settings.Secure.ADB_ENABLED, 1);
-        }
-        updateRootAccessOptions();
-    }
-
     private void resetAdbNotifyOptions() {
         Settings.Secure.putInt(getActivity().getContentResolver(),
                 Settings.Secure.ADB_NOTIFY, 1);
@@ -1648,25 +1588,6 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
         } else if (preference == mAppProcessLimit) {
             writeAppProcessLimitOptions(newValue);
             return true;
-        } else if (preference == mRootAccess) {
-            if ("0".equals(SystemProperties.get(ROOT_ACCESS_PROPERTY, "1"))
-                    && !"0".equals(newValue)) {
-                mSelectedRootValue = newValue;
-                mDialogClicked = false;
-                if (mRootDialog != null) {
-                    dismissDialogs();
-                }
-                mRootDialog = new AlertDialog.Builder(getActivity())
-                        .setMessage(getResources().getString(R.string.root_access_warning_message))
-                        .setTitle(R.string.root_access_warning_title)
-                        .setIconAttribute(android.R.attr.alertDialogIcon)
-                        .setPositiveButton(android.R.string.yes, this)
-                        .setNegativeButton(android.R.string.no, this).show();
-                mRootDialog.setOnDismissListener(this);
-            } else {
-                writeRootAccessOptions(newValue);
-            }
-            return true;
         }
         return false;
     }
@@ -1688,10 +1609,6 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
             mEnableDialog.dismiss();
             mEnableDialog = null;
         }
-        if (mRootDialog != null) {
-            mRootDialog.dismiss();
-            mRootDialog = null;
-        }
         if (mUpdateRecoveryDialog != null) {
             mUpdateRecoveryDialog.dismiss();
             mUpdateRecoveryDialog = null;
@@ -1738,13 +1655,6 @@ public class DevelopmentSettings extends RestrictedSettingsFragment
                     .putBoolean(PREF_SHOW, true)
                     .apply();
             }
-        } else if (dialog == mRootDialog) {
-            if (which == DialogInterface.BUTTON_POSITIVE) {
-                writeRootAccessOptions(mSelectedRootValue);
-            } else {
-                // Reset the option
-                writeRootAccessOptions("0");
-            }
         } else if (dialog == mUpdateRecoveryDialog) {
             if (which == DialogInterface.BUTTON_POSITIVE) {
                 writeUpdateRecoveryOptions();
-- 
2.7.4

