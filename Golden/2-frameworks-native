From 764eb5916c956f273fa25abdf68810832031b05e Mon Sep 17 00:00:00 2001
From: C457 <android.c357@gmail.com>
Date: Thu, 27 Mar 2014 09:40:20 -0500
Subject: [PATCH] native:Fix buffering on STE devices

@marcin1147

We need to define the number of framebuffers this
way we eliminate any rip or screen tearing that
might occur.

Change-Id: Iea7c1ed1fe5a3ae7bcc8cb13b29037d11949bc80
---
 include/ui/FramebufferNativeWindow.h |    8 ++++++++
 libs/ui/FramebufferNativeWindow.cpp  |    8 ++++++++
 2 files changed, 16 insertions(+)

diff --git a/include/ui/FramebufferNativeWindow.h b/include/ui/FramebufferNativeWindow.h
index 02f3c8b..5b2f7b3 100644
--- a/include/ui/FramebufferNativeWindow.h
+++ b/include/ui/FramebufferNativeWindow.h
@@ -28,8 +28,12 @@
 #include <ui/ANativeObjectBase.h>
 #include <ui/Rect.h>
 
+#ifdef STE_HARDWARE
+#define NUM_FRAME_BUFFERS 3
+#else
 #define MIN_NUM_FRAME_BUFFERS  2
 #define MAX_NUM_FRAME_BUFFERS  3
+#endif
 
 #ifdef SAMSUNG_HDMI_SUPPORT
 #include "SecHdmiClient.h"
@@ -85,7 +89,11 @@ private:
     framebuffer_device_t* fbDev;
     alloc_device_t* grDev;
 
+#ifdef STE_HARDWARE
+    sp<NativeBuffer> buffers[NUM_FRAME_BUFFERS];
+#else
     sp<NativeBuffer> buffers[MAX_NUM_FRAME_BUFFERS];
+#endif
     sp<NativeBuffer> front;
     
     mutable Mutex mutex;
diff --git a/libs/ui/FramebufferNativeWindow.cpp b/libs/ui/FramebufferNativeWindow.cpp
index 12c77b8..63c078e 100644
--- a/libs/ui/FramebufferNativeWindow.cpp
+++ b/libs/ui/FramebufferNativeWindow.cpp
@@ -98,12 +98,16 @@ FramebufferNativeWindow::FramebufferNativeWindow()
         mUpdateOnDemand = (fbDev->setUpdateRect != 0);
         
         // initialize the buffer FIFO
+#ifdef STE_HARDWARE
+        mNumBuffers = NUM_FRAME_BUFFERS;
+#else
         if(fbDev->numFramebuffers >= MIN_NUM_FRAME_BUFFERS &&
            fbDev->numFramebuffers <= MAX_NUM_FRAME_BUFFERS){
             mNumBuffers = fbDev->numFramebuffers;
         } else {
             mNumBuffers = MIN_NUM_FRAME_BUFFERS;
         }
+#endif
         mNumFreeBuffers = mNumBuffers;
         mBufferHead = mNumBuffers-1;
 
@@ -249,7 +253,11 @@ int FramebufferNativeWindow::dequeueBuffer(ANativeWindow* window,
         self->mBufferHead = 0;
 
     // wait for a free non-front buffer
+#ifdef STE_HARDWARE
+    while (self->mNumFreeBuffers < NUM_FRAME_BUFFERS) {
+#else
     while (self->mNumFreeBuffers < 2) {
+#endif
         self->mCondition.wait(self->mutex);
     }
     ALOG_ASSERT(self->buffers[index] != self->front);
-- 
1.7.10.4
