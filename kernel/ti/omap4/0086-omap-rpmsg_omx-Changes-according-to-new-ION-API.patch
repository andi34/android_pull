From d1e6dbaee6834f2814995f3b9368d0a5c47a787e Mon Sep 17 00:00:00 2001
From: Vasyl Yushchyshen <vasyl.yushchyshen@ti.com>
Date: Wed, 18 Feb 2015 09:29:14 -0800
Subject: [PATCH 086/111] omap: rpmsg_omx: Changes according to new ION API
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Since ION core API is changed, the following changes required:

1. ion_sg_table() is used instead of ion_map_dma().
ion_unmap_dma() is deprecated.
2. ion_import_fd() is not more
supported changing it to equivalent API call ion_import_dma_buf().

Change-Id: I6d192e8f2b37bd8b4a9b202508e7cc9670da1bb4
Signed-off-by: Vasyl Yushchyshen <vasyl.yushchyshen@globallogic.com>
Signed-off-by: Ruslan Ruslichenko <ruslan.ruslichenko@globallogic.com>
Signed-off-by: D. Andrei Măceș <dmaces@nd.edu>
---
 drivers/rpmsg/omaprpc/omap_rpc.c |  2 +-
 drivers/rpmsg/rpmsg_omx.c        | 15 +++++++--------
 2 files changed, 8 insertions(+), 9 deletions(-)

diff --git a/drivers/rpmsg/omaprpc/omap_rpc.c b/drivers/rpmsg/omaprpc/omap_rpc.c
index ec2a150..0700491 100644
--- a/drivers/rpmsg/omaprpc/omap_rpc.c
+++ b/drivers/rpmsg/omaprpc/omap_rpc.c
@@ -397,7 +397,7 @@ static long omaprpc_ioctl(struct file *filp,
 					    "OMAPRPC: %s: %d: copy_from_user fail: %d\n",
 					    __func__, _IOC_NR(cmd), ret);
 			}
-			data.handle = ion_import_fd(rpc->ion_client, data.fd);
+			data.handle = ion_import_dma_buf(rpc->ion_client, data.fd);
 			if (IS_ERR(data.handle))
 				data.handle = NULL;
 			if (copy_to_user
diff --git a/drivers/rpmsg/rpmsg_omx.c b/drivers/rpmsg/rpmsg_omx.c
index dbbbf7a..a38b1e1 100644
--- a/drivers/rpmsg/rpmsg_omx.c
+++ b/drivers/rpmsg/rpmsg_omx.c
@@ -179,14 +179,15 @@ static int _rpmsg_pa_to_da(struct rpmsg_omx_instance *omx, u32 pa, u32 *da)
 static void _rpmsg_buffer_update_page_list(struct rpmsg_omx_instance *omx,
 					   struct rpmsg_buffer *buffer)
 {
-	struct scatterlist *sglist, *sg;
+	struct scatterlist *sg;
+	struct sg_table *sglist;
 	int n_pages;
 	int i;
 
 	if (buffer->page_list)
 		return;
 
-	sglist = ion_map_dma(omx->ion_client, buffer->ion_handle);
+	sglist = ion_sg_table(omx->ion_client, buffer->ion_handle);
 	if (sglist == NULL) {
 		dev_warn(omx->omxserv->dev,
 			 "%s: failed to get scatter/gather list for ion "
@@ -195,7 +196,7 @@ static void _rpmsg_buffer_update_page_list(struct rpmsg_omx_instance *omx,
 	}
 
 	/* get number of pages */
-	for_each_sg(sglist, sg, INT_MAX, n_pages) {
+	for_each_sg(sglist->sgl, sg, INT_MAX, n_pages) {
 		if (!sg)
 			break;
 	}
@@ -208,13 +209,12 @@ static void _rpmsg_buffer_update_page_list(struct rpmsg_omx_instance *omx,
 	if (buffer->page_list == NULL) {
 		dev_warn(omx->omxserv->dev,
 			 "%s: failed to allocate page list\n", __func__);
-		ion_unmap_dma(omx->ion_client, buffer->ion_handle);
 		return;
 	}
 
-	for_each_sg(sglist, sg, n_pages, i) {
+	for_each_sg(sglist->sgl, sg, n_pages, i)
 		buffer->page_list[i] = sg_phys(sg);
-	}
+
 	wmb();
 }
 
@@ -269,7 +269,6 @@ _rpmsg_buffer_free(struct rpmsg_omx_instance *omx, struct rpmsg_buffer *buffer)
 	if (buffer->page_list) {
 		dma_free_coherent(NULL, sizeof(phys_addr_t) * buffer->n_pages,
 				  buffer->page_list, buffer->page_list_pa);
-		ion_unmap_dma(omx->ion_client, buffer->ion_handle);
 	}
 	if (buffer->ion_handle)
 		ion_free(omx->ion_client, buffer->ion_handle);
@@ -547,7 +546,7 @@ long rpmsg_omx_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 				_IOC_NR(cmd), ret);
 			return -EFAULT;
 		}
-		data.handle = ion_import_fd(omx->ion_client, data.fd);
+		data.handle = ion_import_dma_buf(omx->ion_client, data.fd);
 		if (IS_ERR_OR_NULL(data.handle))
 			data.handle = NULL;
 		if (copy_to_user((char __user *) arg, &data, sizeof(data))) {
-- 
2.7.4

