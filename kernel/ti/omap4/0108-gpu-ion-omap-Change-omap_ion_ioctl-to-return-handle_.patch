From 8670c3ad4faa323f1123e3b852d32ffcfdad6457 Mon Sep 17 00:00:00 2001
From: Ruslan Ruslichenko <ruslan.ruslichenko@globallogic.com>
Date: Wed, 18 Feb 2015 09:42:20 -0800
Subject: [PATCH 108/111] gpu: ion: omap: Change omap_ion_ioctl to return
 handle_id instead handle address

Allocation IOCTL's must return handle id to userspace instead of kernel
virtual address to ion_handle structure, so changing OMAP_ION_TILER_ALLOC
IOCTL to match this requirement.

Change-Id: Ic054bfb802bb5a03a8383ee65d753af48def7196
Signed-off-by: Ruslan Ruslichenko <ruslan.ruslichenko@globallogic.com>
Signed-off-by: Vasyl Yushchyshen <vasyl.yushchyshen@globallogic.com>
---
 drivers/gpu/ion/ion.c           | 21 ---------------------
 drivers/gpu/ion/ion_priv.h      | 21 +++++++++++++++++++++
 drivers/gpu/ion/omap/omap_ion.c |  1 +
 3 files changed, 22 insertions(+), 21 deletions(-)

diff --git a/drivers/gpu/ion/ion.c b/drivers/gpu/ion/ion.c
index f8a928c..fb1770b 100644
--- a/drivers/gpu/ion/ion.c
+++ b/drivers/gpu/ion/ion.c
@@ -85,27 +85,6 @@ struct ion_client {
 	struct dentry *debug_root;
 };
 
-/**
- * ion_handle - a client local reference to a buffer
- * @ref:		reference count
- * @client:		back pointer to the client the buffer resides in
- * @buffer:		pointer to the buffer
- * @node:		node in the client's handle rbtree
- * @kmap_cnt:		count of times this client has mapped to kernel
- * @id:			client-unique id allocated by client->idr
- *
- * Modifications to node, map_cnt or mapping should be protected by the
- * lock in the client.  Other fields are never changed after initialization.
- */
-struct ion_handle {
-	struct kref ref;
-	struct ion_client *client;
-	struct ion_buffer *buffer;
-	struct rb_node node;
-	unsigned int kmap_cnt;
-	int id;
-};
-
 bool ion_buffer_fault_user_mappings(struct ion_buffer *buffer)
 {
 	return ((buffer->flags & ION_FLAG_CACHED) &&
diff --git a/drivers/gpu/ion/ion_priv.h b/drivers/gpu/ion/ion_priv.h
index 4b6d5c0..824d6d9 100644
--- a/drivers/gpu/ion/ion_priv.h
+++ b/drivers/gpu/ion/ion_priv.h
@@ -29,6 +29,27 @@
 struct ion_buffer *ion_handle_buffer(struct ion_handle *handle);
 
 /**
+ * ion_handle - a client local reference to a buffer
+ * @ref:		reference count
+ * @client:		back pointer to the client the buffer resides in
+ * @buffer:		pointer to the buffer
+ * @node:		node in the client's handle rbtree
+ * @kmap_cnt:		count of times this client has mapped to kernel
+ * @id:			client-unique id allocated by client->idr
+ *
+ * Modifications to node, map_cnt or mapping should be protected by the
+ * lock in the client.  Other fields are never changed after initialization.
+ */
+struct ion_handle {
+	struct kref ref;
+	struct ion_client *client;
+	struct ion_buffer *buffer;
+	struct rb_node node;
+	unsigned int kmap_cnt;
+	int id;
+};
+
+/**
  * struct ion_buffer - metadata for a particular buffer
  * @ref:		refernce count
  * @node:		node in the ion_device buffers tree
diff --git a/drivers/gpu/ion/omap/omap_ion.c b/drivers/gpu/ion/omap/omap_ion.c
index ae64b93..2a5bd45 100644
--- a/drivers/gpu/ion/omap/omap_ion.c
+++ b/drivers/gpu/ion/omap/omap_ion.c
@@ -69,6 +69,7 @@ long omap_ion_ioctl(struct ion_client *client, unsigned int cmd,
 		ret = omap_ion_tiler_alloc(client, &data);
 		if (ret)
 			return ret;
+		data.handle = (struct ion_handle *)data.handle->id;
 		if (copy_to_user((void __user *)arg, &data,
 				 sizeof(data)))
 			return -EFAULT;
-- 
2.7.4

