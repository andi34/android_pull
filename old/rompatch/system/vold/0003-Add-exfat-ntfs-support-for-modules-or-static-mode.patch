From e147e2ba270eff2418cedc5e3ad195b00a72b34f Mon Sep 17 00:00:00 2001
From: xiaolu <server@163.com>
Date: Tue, 8 Apr 2014 23:02:36 +0800
Subject: [PATCH] Add exfat/ntfs support for modules or static mode. if you
 cannot write to partitions, it could be you miss SE permissions

Change-Id: I3d460174da140ae3b099ceed0922f8287dd80676
---
 Android.mk        |  8 ++++++++
 Exfat.cpp         | 19 +++++++++++++++++++
 Ntfs.cpp          | 21 +++++++++++++++++++++
 VolumeManager.cpp |  3 +++
 4 files changed, 51 insertions(+)

diff --git a/Android.mk b/Android.mk
index 8c9d3d67..e199fdc7 100644
--- a/Android.mk
+++ b/Android.mk
@@ -20,6 +20,14 @@ ifeq ($(BOARD_VOLD_CRYPTFS_MIGRATE), true)
 common_cflags += -DCRYPTFS_MIGRATE
 endif
 
+ifneq ($(KERNEL_EXFAT_MODULE_NAME),)
+  common_cflags += -DEXFAT_MODULE_NAME=\"$(KERNEL_EXFAT_MODULE_NAME)\"
+endif
+
+ifneq ($(KERNEL_NTFS_MODULE_NAME),)
+  common_cflags += -DNTFS_MODULE_NAME=\"$(KERNEL_NTFS_MODULE_NAME)\"
+endif
+
 common_cflags += -Werror
 
 common_src_files := \
diff --git a/Exfat.cpp b/Exfat.cpp
index 236ec8c7..ce1bcb6a 100644
--- a/Exfat.cpp
+++ b/Exfat.cpp
@@ -60,6 +60,7 @@ int Exfat::doMount(const char *fsPath, const char *mountPoint,
         return rc;
     }
 
+#ifndef EXFAT_MODULE_NAME
     sprintf(mountData,
             "noatime,nodev,nosuid,dirsync,uid=%d,gid=%d,fmask=%o,dmask=%o,%s,%s",
             ownerUid, ownerGid, permMask, permMask,
@@ -77,12 +78,30 @@ int Exfat::doMount(const char *fsPath, const char *mountPoint,
 
     rc = android_fork_execvp(ARRAY_SIZE(args), (char **)args, &status, false,
             true);
+#else
+    unsigned long flags;
 
+    flags = MS_NOATIME | MS_NODEV | MS_NOSUID | MS_DIRSYNC;
+
+    flags |= (executable ? 0 : MS_NOEXEC);
+    flags |= (ro ? MS_RDONLY : 0);
+    flags |= (remount ? MS_REMOUNT : 0);
+
+    sprintf(mountData,
+            "context=u:object_r:sdcard_external:s0,uid=%d,gid=%d,fmask=%o,dmask=%o",
+            ownerUid, ownerGid, permMask, permMask);
+    rc = mount(fsPath, mountPoint, EXFAT_MODULE_NAME, flags, mountData);
+#endif
     if (rc && errno == EROFS) {
         SLOGE("%s appears to be a read only filesystem - retrying mount RO", fsPath);
+#ifndef EXFAT_MODULE_NAME
         strcat(mountData, ",ro");
         rc = android_fork_execvp(ARRAY_SIZE(args), (char **)args, &status, false,
             true);
+#else
+        flags |= MS_RDONLY;
+        rc = mount(fsPath, mountPoint, EXFAT_MODULE_NAME, flags, mountData);
+#endif
     }
 
     return rc;
diff --git a/Ntfs.cpp b/Ntfs.cpp
index ebcb6fdf..f993d8c1 100644
--- a/Ntfs.cpp
+++ b/Ntfs.cpp
@@ -112,6 +112,7 @@ int Ntfs::doMount(const char *fsPath, const char *mountPoint,
         permMask = 0;
     }
 
+#ifndef NTFS_MODULE_NAME
     sprintf(mountData,
             "utf8,uid=%d,gid=%d,fmask=%o,dmask=%o,"
 	    "shortname=mixed,nodev,nosuid,dirsync",
@@ -136,11 +137,31 @@ int Ntfs::doMount(const char *fsPath, const char *mountPoint,
     rc = android_fork_execvp(ARRAY_SIZE(args), (char **)args, &status, false,
             true);
 
+#else
+    unsigned long flags;
+
+    flags = MS_NOATIME | MS_NODEV | MS_NOSUID | MS_DIRSYNC;
+
+    flags |= (executable ? 0 : MS_NOEXEC);
+    flags |= (ro ? MS_RDONLY : 0);
+    flags |= (remount ? MS_REMOUNT : 0);
+
+    sprintf(mountData,
+            "uid=%d,gid=%d,fmask=%o,dmask=%o",
+            ownerUid, ownerGid, permMask, permMask);
+    rc = mount(fsPath, mountPoint, NTFS_MODULE_NAME, flags, mountData);
+#endif
+
     if (rc && errno == EROFS) {
         SLOGE("%s appears to be a read only filesystem - retrying mount RO", fsPath);
+#ifndef NTFS_MODULE_NAME
         strcat(mountData, ",ro");
         rc = android_fork_execvp(ARRAY_SIZE(args), (char **)args, &status, false,
             true);
+#else
+        flags |= MS_RDONLY;
+        rc = mount(fsPath, mountPoint, NTFS_MODULE_NAME, flags, mountData);
+#endif
 
     }
 
diff --git a/VolumeManager.cpp b/VolumeManager.cpp
index cb23d955..1d0ed135 100644
--- a/VolumeManager.cpp
+++ b/VolumeManager.cpp
@@ -1370,7 +1370,10 @@ static const char *LUN_FILES[] = {
 #endif
     /* Only andriod0 exists, but the %d in there is a hack to satisfy the
        format string and also give a not found error when %d > 0 */
+    "/sys/devices/platform/msm_hsusb/gadget/lun0/file",
+    "/sys/class/android_usb/android0/f_mass_storage/lun0/file",
     "/sys/class/android_usb/android%d/f_mass_storage/lun/file",
+    "/sys/devices/virtual/android_usb/android0/f_mass_storage/lun",
     NULL
 };
 
